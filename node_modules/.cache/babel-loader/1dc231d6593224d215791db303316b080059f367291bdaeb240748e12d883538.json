{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsalerno/Documents/GitHub/wordgame-2/wordgame-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport wordList from \"./dictionary_compact.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const wordRoot = \"gress\".toLowerCase();\n  const rootMeaning = \"to step\";\n  const [rows, setRows] = useState([{\n    number: 6,\n    correct: false\n  }, {\n    number: 8,\n    correct: false\n  }, {\n    number: 9,\n    correct: false\n  }, {\n    number: 10,\n    correct: false\n  }]);\n  const [currentGuessLength, setCurrentGuessLength] = useState(Math.min(...rows.map(row => row.number)));\n\n  // console.log(currentGuessLength)\n\n  const correctWords = Object.keys(wordList).filter(key => key.toLowerCase().includes(wordRoot.toLowerCase())); // Get the first key\n\n  const checkWordExists = word => {\n    return correctWords.includes(word.toLowerCase());\n  };\n  const [guess, setGuess] = useState(\"\");\n  const [guessNumber, setGuessNumber] = useState(1);\n  const handleType = newGuess => {\n    setGuess(newGuess);\n  };\n  const handleGuess = () => {\n    if (checkWordExists(guess)) {\n      setGuess(\"\");\n      setGuessNumber(curr => curr + 1);\n      setRow;\n    }\n    // console.log(wordList[guess])\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            width: \"fit-content\",\n            padding: \"10px\"\n          },\n          children: new Date().toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: wordRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: rootMeaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-rows-container\",\n        children: rows.map((row, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-row\",\n            children: Array.from({\n              length: row.number\n            }, (_, index2) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"letter-box\",\n              style: {\n                backgroundColor: guessNumber === index + 1 ? \"rgb(229,229,229)\" : \"rgb(209,209,209)\"\n              },\n              children: guessNumber === index + 1 ? guess[index2] : \"\"\n            }, index2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: guess,\n          onChange: e => {\n            handleType(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleGuess();\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"23F/EU7vFqjX6afYvrhsTcGJcDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","wordList","jsxDEV","_jsxDEV","App","_s","wordRoot","toLowerCase","rootMeaning","rows","setRows","number","correct","currentGuessLength","setCurrentGuessLength","Math","min","map","row","correctWords","Object","keys","filter","key","includes","checkWordExists","word","guess","setGuess","guessNumber","setGuessNumber","handleType","newGuess","handleGuess","curr","setRow","className","children","style","width","padding","Date","toLocaleDateString","year","month","day","fileName","_jsxFileName","lineNumber","columnNumber","index","Array","from","length","_","index2","backgroundColor","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/matthewsalerno/Documents/GitHub/wordgame-2/wordgame-react-app/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { useState } from \"react\"\n\nimport wordList from \"./dictionary_compact.json\"\n\n\n\n\nfunction App() {\n\n  const wordRoot = \"gress\".toLowerCase();\n  const rootMeaning = \"to step\"\n\n  const [rows, setRows] = useState([\n    {number: 6, correct: false},\n    {number: 8, correct: false},\n    {number: 9, correct: false},\n    {number: 10, correct: false},\n  ])\n\n  const [currentGuessLength, setCurrentGuessLength] = useState(Math.min(...rows.map(row => row.number)))\n\n  // console.log(currentGuessLength)\n  \n  const correctWords = Object.keys(wordList).filter(key => key.toLowerCase().includes(wordRoot.toLowerCase())); // Get the first key\n\n  const checkWordExists = (word) => {\n    return correctWords.includes(word.toLowerCase());\n  };\n\n\n  const [guess, setGuess] = useState(\"\");\n  const [guessNumber, setGuessNumber] = useState(1)\n\n  \n  const handleType = (newGuess) => {\n    setGuess(newGuess);\n  }\n\n  const handleGuess = () => {\n    if (checkWordExists(guess)) {\n      setGuess(\"\");\n      setGuessNumber(curr => curr + 1);\n      setRow\n    }\n    // console.log(wordList[guess])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"home-body\">\n        <div className=\"date-header\">\n        <h4 style={{width: \"fit-content\", padding: \"10px\"}}>\n          {new Date().toLocaleDateString('en-US',{ year: 'numeric', month: 'long', day: 'numeric' })}\n        </h4>\n        </div>\n        <div className=\"root-title\">\n            <h1>\n              {wordRoot}\n            </h1>\n            <h4>\n              {rootMeaning}\n            </h4>\n        </div>\n        <div className=\"word-rows-container\">\n          {rows.map((row, index) => {\n            return (\n              <div className=\"word-row\">\n                      {Array.from({ length: row.number }, (_, index2) => (\n                        <div key={index2} className=\"letter-box\"\n                        style={{\n                          backgroundColor: guessNumber === index + 1 ? \"rgb(229,229,229)\" : \"rgb(209,209,209)\"\n                        }}>\n                          {guessNumber === index + 1 ? guess[index2] : \"\"}\n                        </div>\n                      ))}\n              </div>\n            )\n          })}\n        </div>\n        <div className=\"search-bar\">\n          <input\n          value={guess}\n          onChange={(e)=>{handleType(e.target.value)}}>\n          </input>\n        </div>\n        <div className=\"submit-container\">\n          <button onClick={()=>{handleGuess()}}>\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}